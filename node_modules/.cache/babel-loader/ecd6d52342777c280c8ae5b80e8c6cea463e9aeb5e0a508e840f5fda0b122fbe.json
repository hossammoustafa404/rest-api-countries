{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\front-end-mentor\\\\js\\\\countries app\\\\project\\\\src\\\\context\\\\CountriesContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountriesContext = /*#__PURE__*/createContext();\nconst CountriesProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Properties\n  const [countries, setCountries] = useState([]);\n  const [status, setStatus] = useState(\"loading\");\n  const [darkMode, setDarkMode] = useState(\"light\");\n  const [region, setRegion] = useState(\"All\");\n  const [searchedCountry, setSearchedCountry] = useState(\"\");\n  const regions = [...new Set(countries.slice(0, 8).map(country => country.region))];\n\n  // Methods\n  const handleDarkMode = () => {\n    if (darkMode === \"light\") {\n      setDarkMode(\"dark\");\n    } else {\n      setDarkMode(\"light\");\n    }\n  };\n  const handleRegion = value => {\n    setRegion(value);\n    setSearchedCountry(\"\");\n  };\n  const handleSearchedCountry = value => {\n    setSearchedCountry(value);\n  };\n\n  // State\n  const state = {\n    // State properties\n    regions: regions,\n    region: region,\n    countries: countries,\n    status: status,\n    darkMode: darkMode,\n    searchedCountry: searchedCountry,\n    // State methods\n    handleDarkMode: handleDarkMode,\n    handleRegion: handleRegion,\n    handleSearchedCountry: handleSearchedCountry\n  };\n\n  // Fetch function\n  const fetchCountries = async () => {\n    setStatus(\"loading\");\n    const response = await fetch(\"https://restcountries.com/v3.1/all\");\n    const data = await response.json();\n    setCountries(data);\n    setStatus(\"idle\");\n    console.log(data);\n  };\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CountriesContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CountriesProvider, \"w8RVSqfL0BXX2q5C/iKiA3DEH4w=\");\n_c = CountriesProvider;\nexport default CountriesProvider;\nvar _c;\n$RefreshReg$(_c, \"CountriesProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","CountriesContext","CountriesProvider","children","countries","setCountries","status","setStatus","darkMode","setDarkMode","region","setRegion","searchedCountry","setSearchedCountry","regions","Set","slice","map","country","handleDarkMode","handleRegion","value","handleSearchedCountry","state","fetchCountries","response","fetch","data","json","console","log"],"sources":["D:/programming/front-end-mentor/js/countries app/project/src/context/CountriesContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const CountriesContext = createContext();\r\n\r\nconst CountriesProvider = ({ children }) => {\r\n  // Properties\r\n  const [countries, setCountries] = useState([]);\r\n  const [status, setStatus] = useState(\"loading\");\r\n  const [darkMode, setDarkMode] = useState(\"light\");\r\n  const [region, setRegion] = useState(\"All\");\r\n  const [searchedCountry, setSearchedCountry] = useState(\"\");\r\n\r\n  const regions = [\r\n    ...new Set(countries.slice(0, 8).map((country) => country.region)),\r\n  ];\r\n\r\n  // Methods\r\n  const handleDarkMode = () => {\r\n    if (darkMode === \"light\") {\r\n      setDarkMode(\"dark\");\r\n    } else {\r\n      setDarkMode(\"light\");\r\n    }\r\n  };\r\n\r\n  const handleRegion = (value) => {\r\n    setRegion(value);\r\n    setSearchedCountry(\"\")\r\n  };\r\n\r\n  const handleSearchedCountry = (value) => {\r\n    setSearchedCountry(value);\r\n  };\r\n\r\n  // State\r\n  const state = {\r\n    // State properties\r\n    regions: regions,\r\n    region: region,\r\n    countries: countries,\r\n    status: status,\r\n    darkMode: darkMode,\r\n    searchedCountry: searchedCountry,\r\n\r\n    // State methods\r\n    handleDarkMode: handleDarkMode,\r\n    handleRegion: handleRegion,\r\n    handleSearchedCountry: handleSearchedCountry,\r\n  };\r\n\r\n  // Fetch function\r\n  const fetchCountries = async () => {\r\n    setStatus(\"loading\");\r\n    const response = await fetch(\"https://restcountries.com/v3.1/all\");\r\n    const data = await response.json();\r\n    setCountries(data);\r\n    setStatus(\"idle\");\r\n\r\n    console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <CountriesContext.Provider value={state}>\r\n      {children}\r\n    </CountriesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CountriesProvider;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE3D,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAE;AAE/C,MAAMI,iBAAiB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACrC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMc,OAAO,GAAG,CACd,GAAG,IAAIC,GAAG,CAACX,SAAS,CAACY,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACR,MAAM,CAAC,CAAC,CACnE;;EAED;EACA,MAAMS,cAAc,GAAG,MAAM;IAC3B,IAAIX,QAAQ,KAAK,OAAO,EAAE;MACxBC,WAAW,CAAC,MAAM,CAAC;IACrB,CAAC,MAAM;MACLA,WAAW,CAAC,OAAO,CAAC;IACtB;EACF,CAAC;EAED,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BV,SAAS,CAACU,KAAK,CAAC;IAChBR,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMS,qBAAqB,GAAID,KAAK,IAAK;IACvCR,kBAAkB,CAACQ,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAME,KAAK,GAAG;IACZ;IACAT,OAAO,EAAEA,OAAO;IAChBJ,MAAM,EAAEA,MAAM;IACdN,SAAS,EAAEA,SAAS;IACpBE,MAAM,EAAEA,MAAM;IACdE,QAAQ,EAAEA,QAAQ;IAClBI,eAAe,EAAEA,eAAe;IAEhC;IACAO,cAAc,EAAEA,cAAc;IAC9BC,YAAY,EAAEA,YAAY;IAC1BE,qBAAqB,EAAEA;EACzB,CAAC;;EAED;EACA,MAAME,cAAc,GAAG,YAAY;IACjCjB,SAAS,CAAC,SAAS,CAAC;IACpB,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCvB,YAAY,CAACsB,IAAI,CAAC;IAClBpB,SAAS,CAAC,MAAM,CAAC;IAEjBsB,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACnB,CAAC;EAED5B,SAAS,CAAC,MAAM;IACdyB,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,gBAAgB,CAAC,QAAQ;IAAC,KAAK,EAAED,KAAM;IAAA,UACrCpB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACiB;AAEhC,CAAC;AAAC,GAlEID,iBAAiB;AAAA,KAAjBA,iBAAiB;AAoEvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}